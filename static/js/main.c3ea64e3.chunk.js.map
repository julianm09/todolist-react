{"version":3,"sources":["comp/completed.js","comp/progress.js","comp/todoForm.js","App.js","index.js"],"names":["CompletedTodoContainer","styled","div","CompleteHeader","CompletedItem","CompleteTodos","ClearButton","Completed","completeTodos","setCompleteTodos","todos","setTodos","colorOne","colorTwo","completedList","map","completed","index","value","style","color","border","length","background","onClick","console","log","newTodos","filter","Progressbar","Progression","Progress","progress","width","Container","AppContainer","InputTodoContainer","form","InputTodo","input","TodoContainer","TodoItemContainer","TodoItemCard","DeleteButton","DateTime","Logo","Message","Header","Switch","DarkMode","TodoForm","dark","setDark","useState","inputValue","setInputValue","deleteTodo","todoIndex","myTodos","id","newCompletedtodos","completeTodo","todoItems","date","toString","slice","position","right","onSubmit","e","preventDefault","push","Date","Math","floor","random","onChange","target","placeholder","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3ea64e3.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { TextField } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { Message } from './todoForm'\n\n\n\nconst CompletedTodoContainer = styled.div`\n    width: 30vw; \n    height: calc(100vw-50px;);\n    background: ;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    text-align: left;\n    border: 1px solid blue;\n    border-radius: 5px;\n    color: blue;\n    margin-left: 25px;\n    position: relative;\n    max-height: 80vh;\n    position: sticky;\n    top: 10vh;\n\n\n\n    @media (max-width: 1000px) {\n        display: none;\n      }\n\n\n\n`\n\nconst CompleteHeader = styled.div`\n\n\n    background: white;\n    display: flex;\n    padding: 10px;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    top: -20px;\n    font-size: 12px\n\n`\n\nconst CompletedItem = styled.div`\nmargin: 10px\n\n\n\n\n\n`\n\nconst CompleteTodos = styled.div`\n\n\nfont-size: 15px\n\n\n\n`\n\nconst ClearButton = styled.div`\n\n\nposition: absolute;\ntop: 0;\nright: 0;\n\nfont-size: 12px;\npadding: 12px;\nborder-radius:5px;\ncursor: pointer;\ntransition: 0.3s;\n\n\n&:hover{\n    border-radius:  5px;\n    transition: 0.3s;\n    transform:scale(0.9)\n\n}\n\n\n`\n\nexport const Completed = ({ completeTodos, setCompleteTodos, todos, setTodos, colorOne, colorTwo }) => {\n\n    const clearCompleted = () => {\n        setCompleteTodos([])\n\n\n        console.log(todos)\n        const newTodos = completeTodos.filter((todos) => todos.completed == false);\n        setTodos(newTodos)\n        \n    }\n\n\n    const completedList = completeTodos.map((completed, index) => {\n\n        return(\n            <CompletedItem key={index}>{'âœ” '+completed.value}</CompletedItem>\n        )\n\n    })\n    \n\n    \n\n    return(\n<>\n        \n  \n\n        <CompletedTodoContainer style={{ color: colorTwo, border: `1px solid ${colorTwo}` }}>\n\n        {completeTodos.length > 0 ? <ClearButton style={{ color: colorOne, background: colorTwo, border: `1px solid ${colorOne}` }}  onClick={clearCompleted}>clear</ClearButton> : ''}\n\n            \n\n            <CompleteHeader style={{ color: colorTwo, background: colorOne}}>Completed {completeTodos.length}</CompleteHeader>\n\n\n            <CompleteTodos>{completeTodos.length == 0 ? 'Complete an item' : completedList}</CompleteTodos>\n\n\n            \n\n        \n        </CompletedTodoContainer>\n\n        \n\n</>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Progressbar = styled.div`\n  width: 100%;\n  height: 10px;\n  background: white;\n  position: absoulte;\n  top: 10%;\n  left: 10%;\n  border-radius: 10px;\n  border: 5px solid white;\n  z-index: 100;\n  transition: ease 0.5s;\n  border: 1px solid blue;\n\n`;\nconst Progression = styled.div`\n  width: 10vw;\n  height: 10px;\n  background: blue;\n  position: absoulte;\n  top: 10%;\n  left: 10%;\n  border-radius: 5px;\n  transition: ease 0.5s;\n\n  z-index: 100;\n`;\n\nexport const Progress = ({ todos, completed, colorOne, colorTwo }) => {\n\n\n\n  const progress = () => {\n    if (completed.length === 0) {\n      return 0;\n    } else {\n      return completed.length / todos.length * 100;\n    }\n  };\n\n  const finished = () => {\n    if (progress() === 100) {\n      return ` 1px solid ${colorTwo}`;\n    }\n  };\n\n  return (\n    <Progressbar style={{ border: '1px solid ' + colorTwo }}>\n      <Progression style={{ width: progress() + \"%\" }} />\n    </Progressbar>\n  );\n};","import React, { useState } from 'react'\nimport { TextField } from '@material-ui/core';\nimport styled from 'styled-components'\nimport { Completed } from './completed'\nimport { Progress }  from './progress'\n\n\nconst Container = styled.div`\n\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\n\npadding: 25px 0 25px 0 ;\nwidth: 80vw;\n\n\n\n`\n\n\nconst AppContainer = styled.div`\n\ndisplay: flex;\njustify-content: space-between;\nflex-direction: row;\n\npadding: 25px 0 25px 0 ;\n\n\n\n`\n\nconst InputTodoContainer = styled.form`\n\n\n\ndisplay: flex;\n\nborder-radius: 5px;\n\n\n\n\n`\n\nconst InputTodo = styled.input`\nheight: 60px;\nmargin: 0;\nwidth: 100%;\nborder: none;\ndisplay: flex;\nbackground transparent;\npadding: 0 0 0 25px;\n\nborder-radius: 5px;\nfont-size: 15px;\n\n\n\n&:focus{\n  \n\n    outline: none;\n}\n\n&::placeholder {\n    color: lightGrey;\n    font-size: 15px;\n  }\n\n\n`\n\n\nconst TodoContainer = styled.div`\nwidth: 50vw;\n\ndisplay: flex;\n\nflex-direction: column;\n\n@media (max-width: 1000px) {\n    width: 80vw;\n  }\n\n\n`\n\nconst TodoItemContainer = styled.div`\n\nmargin: 25px 0 0 0 ;\nposition: relative\n\nborder-radius: 5px;\ntransition: ease 0.3s;\ncursor: pointer;\ncolor: white;\ndisplay: flex;\nalign-items: center;\n\njustify-content: space-between;\n\n`\n\nconst TodoItemCard = styled.div`\n\n\nheight: 60px;\nwidth: 80%;\n\nborder-radius: 5px;\ntransition: ease 0.3s;\ncursor: pointer;\ncolor: blue;\ndisplay: flex;\nalign-items: center;\npadding: 0 25px 0 25px;\njustify-content: space-between;\nmargin: 0 25px 0 0px;\n\n\n\n&:hover{\n    transition: ease 0.3s;\n    transform: scale(1.02);\n    box-shadow: \n    0px 0px 10px #ffffff;\n}\n`\n\nconst DeleteButton = styled.div`\n\n\nmin-width:30px;\nheight:30px;\nbackground: white;\nborder-radius: 5px;\ntransition: ease 0.1s;\ncursor: pointer;\ncolor: blue;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\n\nposition: relative;\n\n&:hover{\n    transition: ease 0.1s;\n    transform: scale(1.22);\n\n}\n`\n\nconst DateTime = styled.div`\n\n\nfont-size: 8px;\nwidth: 75px;\ntext-align: right;\n\n\n\n`\n\nconst Logo = styled.div`\n\n\nfont-size: 30px;\n\nmargin: 25px 0;\nfont-weight: 700;\n\n\n\n\n`\n\nexport const Message = styled.div`\n\n\nfont-size: 15px;\ncolor: blue;\ntransition: 1s ease;\n\nanimation: 2s blink ease infinite;\n\n\n\n\n\n\n`\n\nconst Header = styled.div`\n\n\nfont-size: 15px;\ncolor: blue;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n\n\n\n\n\n`\n\nconst Switch = styled.div`\n\n\nfont-size: 15px;\n\n\n\n\nwidth: 25px;\nheight: 25px;\nborder-radius: 50px;\ntransition: 0.3s ease;\n\n\n\n`\n\n\nconst DarkMode = styled.div`\n\n\nfont-size: 15px;\ncolor: blue;\nborder: 1px solid blue;\nwidth: 50px;\nheight: 25px;\nborder-radius: 50px;\nposition: relative;\ncursor: pointer;\n\n&:hover ${Switch}{\n\n    transform: scale(0.9);\n    transition: 0.3s ease;\n    \n    \n}\n\n\n\n\n\n\n`\n\n\n\n\n\nexport const TodoForm = ({dark, setDark, colorOne, colorTwo}) => {\n\n\n\n\n    // list of todos //\n    const [todos, setTodos] = useState([])\n\n    // track input value //\n    const [inputValue, setInputValue] = useState('')\n\n    // list of completed todos //\n    const [completeTodos, setCompleteTodos] = useState([])\n\n\n\n    // handle input change //\n    const handleChange = (e) => {\n\n        setInputValue(e.target.value)\n\n    }\n\n\n    // handle form submit //\n    const handleSubmit = (e) => {\n\n        \n\n        e.preventDefault();\n\n        const randomNum = () =>{\n\n         return Math.floor(Math.random() * Math.floor(300))\n\n        };\n\n        todos.push({value:inputValue, completed:false, date:new Date(), id:randomNum()  })\n\n        setTodos([...todos])\n\n        setInputValue('')\n\n\n    }\n\n\n    // delete todos //\n    const deleteTodo = (todoIndex, myTodos) => {\n        console.log(todoIndex)\n\n        // get this index and remove from todos array //\n\n        const newTodos = todos.filter((todos) => todos.id !== myTodos.id);\n\n        setTodos(newTodos)\n\n        const newCompletedtodos = completeTodos.filter((todos) => todos.id !== myTodos.id);\n\n        setCompleteTodos(newCompletedtodos)\n\n        console.log(completeTodos)\n\n        console.log(myTodos.value)\n \n    }\n\n\n    const completeTodo = (myTodos, todoIndex) => {\n\n        myTodos.completed = !myTodos.completed;\n\n        setTodos([...todos])\n\n        if (myTodos.completed == true) {\n\n        setCompleteTodos([...completeTodos, myTodos])\n\n        console.log(completeTodos)\n\n        } else {\n\n            const newCompletedtodos = completeTodos.filter((todos) => todos.id !== myTodos.id);\n\n            setCompleteTodos(newCompletedtodos)\n        }\n\n\n\n        \n\n        \n    }\n\n\n\n    const todoItems = todos.map((todos, index) => {\n\n\n        return(\n        <TodoItemContainer key={index} >\n\n\n\n        <TodoItemCard  onClick={() => deleteTodo(index, todos)} style={{ \n            border: `1px solid ${colorTwo}`, \n            color: todos.completed ? colorOne : colorTwo,\n            background: todos.completed ? colorTwo : colorOne,\n            \n            \n            \n            }} >\n            \n            {todos.value}\n\n\n        <DateTime>\n            {todos.date.toString().slice(0, 24)}\n        </DateTime>\n\n            \n            \n        </TodoItemCard>\n\n\n        <DeleteButton onClick={() => completeTodo(todos, index)} style={{ \n            border: `1px solid ${colorTwo}`,\n            color: todos.completed ? colorOne : colorTwo,\n            background: todos.completed ? colorTwo: colorOne\n            \n            }}>\n\n                {todos.completed ? 'âœ”' : ' '}\n                \n                \n                \n            </DeleteButton>\n\n\n        </TodoItemContainer>\n\n        \n        )\n        \n        })\n\n\n\n    return(\n\n<Container>\n<Header style={{color: colorTwo}}>\n<Logo>todo</Logo>\n\n\n<DarkMode onClick={() => setDark(!dark)} style={{ color: colorTwo, border: `1px solid ${colorTwo}` }}><Switch style={{ color: colorTwo, background: colorTwo, position: 'absolute', right: dark ? '0px' : '25px' }} ></Switch></DarkMode>\n</Header>\n\n        <Progress todos={todos} completed={completeTodos} colorTwo={colorTwo} colorOne={colorOne}></Progress>\n    \n        <AppContainer>\n\n\n\n\n        <TodoContainer>\n\n            {/* <SimpleSelect todos={todos} setTodos={setTodos}></SimpleSelect> */}\n\n            \n\n\n        <InputTodoContainer onSubmit={handleSubmit}>\n            <InputTodo onChange={handleChange} style={{ color: colorTwo, border: `1px solid ${colorTwo}` }}  value={inputValue} placeholder={'add todo'}></InputTodo>\n            \n            \n        </InputTodoContainer>\n      \n        {todoItems}\n\n    \n        </TodoContainer>\n\n        <Completed setCompleteTodos={setCompleteTodos} completeTodos={completeTodos} todos={todos} setTodos={setTodos} colorOne={colorOne} colorTwo={colorTwo}></Completed>\n\n        \n\n\n    \n\n        </AppContainer>\n        <Message style={{ color: colorTwo}}>{todos.length == 1 ? 'Click on todo to delete' : todos.length == 0 ? 'Add todo to get started' : '' }</Message>\n\n\n\n\n        </Container>\n        \n    )\n\n}","import \"./App.css\";\nimport { TodoForm } from './comp/todoForm';\nimport React, { useState } from 'react';\n/* import { useState } from 'react' */\n\n\n\nfunction App() {\n\nconst [dark, setDark] = useState(false)\n\nconst colorOne = () => dark ? 'blue' : '#ffffff';\nconst colorTwo = () => dark ? '#ffffff' : 'blue';\n\n  return (\n  <div className=\"App\" style={{background:colorOne()}}>\n    <TodoForm dark={dark} setDark={setDark} colorOne={colorOne()} colorTwo={colorTwo()}></TodoForm>\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}