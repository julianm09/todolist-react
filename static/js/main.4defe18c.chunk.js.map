{"version":3,"sources":["comp/completed.js","comp/progress.js","comp/todoForm.js","App.js","index.js"],"names":["CompletedTodoContainer","styled","div","CompleteHeader","CompletedItem","CompleteTodos","ClearButton","Completed","completeTodos","setCompleteTodos","todos","setTodos","colorOne","colorTwo","saveToStorage","completedList","map","completed","index","value","style","color","border","length","background","onClick","console","log","newTodos","filter","Progressbar","Progression","Progress","progress","width","blink","keyframes","Container","AppContainer","InputTodoContainer","form","InputTodo","input","TodoContainer","TodoItemContainer","TodoItemCard","DeleteButton","DateTime","Logo","Message","Header","Switch","DarkMode","AddButton","TodoForm","dark","setDark","savedTodos","JSON","parse","localStorage","getItem","useState","hovered","setHovered","inputValue","setInputValue","savedCompletedTodos","setItem","stringify","handleSubmit","e","preventDefault","push","date","Date","id","Math","floor","random","deleteTodo","todoIndex","myTodos","newCompletedtodos","completeTodo","todoItems","toString","slice","position","right","onSubmit","onChange","target","placeholder","onMouseEnter","onMouseLeave","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4defe18c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { Message } from \"./todoForm\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst CompletedTodoContainer = styled.div`\n  width: 30vw;\n  height: calc(100vw-50px;);\n  background: ;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  text-align: left;\n  border: 1px solid blue;\n  border-radius: 5px;\n  color: blue;\n  margin-left: 25px;\n  position: relative;\n  max-height: 80vh;\n  position: sticky;\n  top: 10vh;\n\n  @media (max-width: 1000px) {\n    display: none;\n  }\n`;\n\nconst CompleteHeader = styled.div`\n  background: white;\n  display: flex;\n  padding: 10px;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: -20px;\n  font-size: 12px;\n`;\n\nconst CompletedItem = styled.div`\n  margin: 10px;\n  font-size: 15px;\n  display: flex;\n`;\n\nconst CompleteTodos = styled.div``;\n\nconst ClearButton = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  font-size: 12px;\n  padding: 12px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    border-radius: 5px;\n    transition: 0.3s;\n    transform: scale(0.9);\n  }\n`;\n\nexport const Completed = ({\n  completeTodos,\n  setCompleteTodos,\n  todos,\n  setTodos,\n  colorOne,\n  colorTwo,\n  saveToStorage,\n}) => {\n  const clearCompleted = () => {\n    setCompleteTodos([]);\n    console.log(todos);\n    const newTodos = completeTodos.filter((todos) => todos.completed == false);\n    setTodos(newTodos);\n\n    return saveToStorage;\n  };\n\n  const completedList = completeTodos.map((completed, index) => {\n    return (\n      <CompletedItem key={index}>\n        <DoneIcon></DoneIcon>\n        {completed.value}\n      </CompletedItem>\n    );\n  });\n\n  return (\n    <>\n      <CompletedTodoContainer\n        style={{ color: colorTwo, border: `1px solid ${colorTwo}` }}\n      >\n        {completeTodos.length > 0 ? (\n          <ClearButton\n            style={{\n              color: colorOne,\n              background: colorTwo,\n              border: `1px solid ${colorOne}`,\n            }}\n            onClick={clearCompleted}\n          >\n            clear\n          </ClearButton>\n        ) : (\n          \"\"\n        )}\n\n        <CompleteHeader style={{ color: colorTwo, background: colorOne }}>\n          Completed {completeTodos.length}\n        </CompleteHeader>\n\n        <CompleteTodos>\n          {completeTodos.length == 0 ? \"Complete an item\" : completedList}\n        </CompleteTodos>\n      </CompletedTodoContainer>\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Progressbar = styled.div`\n  width: 100%;\n  height: 10px;\n  position: absoulte;\n  top: 10%;\n  left: 10%;\n  border-radius: 10px;\n  border: 5px solid white;\n  z-index: 100;\n  transition: ease 0.5s;\n  border: 1px solid blue;\n`;\nconst Progression = styled.div`\n  width: 10vw;\n  height: 10px;\n\n  position: absoulte;\n  top: 10%;\n  left: 10%;\n  border-radius: 5px;\n  transition: ease 0.5s;\n\n  z-index: 100;\n`;\n\nexport const Progress = ({ todos, completed, colorOne, colorTwo }) => {\n  const progress = () => {\n    if (completed.length === 0) {\n      return 0;\n    } else {\n      return (completed.length / todos.length) * 100;\n    }\n  };\n\n  const finished = () => {\n    if (progress() === 100) {\n      return ` 1px solid ${colorTwo}`;\n    }\n  };\n\n  return (\n    <Progressbar style={{ border: \"1px solid \" + colorTwo }}>\n      <Progression style={{ width: progress() + \"%\", background: colorTwo }} />\n    </Progressbar>\n  );\n};\n","import React, { useState } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Completed } from \"./completed\";\nimport { Progress } from \"./progress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst blink = keyframes`\n    from{\n        opacity: 0%\n    }\n    50%{\n        opacity: 100%\n    }\n    to{\n        opacity: 0\n    }\n}\n\n`\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n\n  padding: 25px 0 25px 0;\n  width: 60vw;\n\n  @media (max-width: 1000px) {\n    width: 90vw;\n  }\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n\n  padding: 25px 0 25px 0;\n`;\n\nconst InputTodoContainer = styled.form`\n  display: flex;\n\n  border-radius: 5px;\n\n  position: relative;\n`;\n\nconst InputTodo = styled.input`\nheight: 60px;\nmargin: 0;\nwidth: 100%;\nborder: none;\ndisplay: flex;\nbackground transparent;\npadding: 0 0 0 25px;\n\nborder-radius: 5px;\nfont-size: 15px;\n\n\n\n&:focus{\n  \n\n    outline: none;\n}\n\n&::placeholder {\n    color: lightGrey;\n    font-size: 15px;\n  }\n\n\n`;\n\nconst TodoContainer = styled.div`\n  width: 50vw;\n\n  display: flex;\n\n  flex-direction: column;\n\n  @media (max-width: 1000px) {\n    width: 90vw;\n  }\n`;\n\nconst TodoItemContainer = styled.div`\n\nmargin: 25px 0 0 0 ;\nposition: relative\n\nborder-radius: 5px;\ntransition: ease 0.3s;\ncursor: pointer;\ncolor: white;\ndisplay: flex;\nalign-items: center;\n\njustify-content: space-between;\n\n`;\n\nconst TodoItemCard = styled.div`\n  height: 60px;\n  width: 80%;\n\n  border-radius: 5px;\n  transition: ease 0.3s;\n  cursor: pointer;\n  color: blue;\n  display: flex;\n  align-items: center;\n  padding: 0 25px 0 25px;\n  justify-content: space-between;\n  margin: 0 25px 0 0px;\n\n  &:hover {\n    transition: ease 0.3s;\n    transform: scale(1.02);\n    box-shadow: 0px 0px 10px #ffffff;\n  }\n`;\n\nconst DeleteButton = styled.div`\n  min-width: 50px;\n  height: 50px;\n  background: white;\n  border-radius: 5px;\n  transition: ease 0.1s;\n  cursor: pointer;\n  color: blue;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 5px 0 0;\n\n  position: relative;\n\n  &:hover {\n    transition: ease 0.1s;\n    transform: scale(1.22);\n    box-shadow: 0px 0px 10px #ffffff;\n  }\n`;\n\nconst DateTime = styled.div`\n  font-size: 8px;\n  width: 75px;\n  text-align: right;\n`;\n\nconst Logo = styled.div`\n  font-size: 30px;\n\n  margin: 25px 0;\n  font-weight: 700;\n`;\n\nexport const Message = styled.div`\n  font-size: 15px;\n  color: blue;\n  transition: 1s ease;\n  animation-name: ${blink};\n  animation-duration: 2s;\n  animation-iteration-count: infinite;\n`;\n\nconst Header = styled.div`\n  font-size: 15px;\n  color: blue;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Switch = styled.div`\n  font-size: 15px;\n\n  width: 25px;\n  height: 25px;\n  border-radius: 50px;\n  transition: 0.3s ease;\n`;\n\nconst DarkMode = styled.div`\n  font-size: 15px;\n  color: blue;\n  border: 1px solid blue;\n  width: 50px;\n  height: 25px;\n  border-radius: 50px;\n  position: relative;\n  cursor: pointer;\n\n  &:hover ${Switch} {\n    transform: scale(0.9);\n    transition: 0.3s ease;\n  }\n`;\n\nconst AddButton = styled.div`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: blue;\n  border-radius: 5px;\n  cursor: pointer;\n\n  background: white;\n  border: 1px solid blue;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: blue;\n    color: white;\n    transition: 0.3s ease;\n    border: 1px solid white;\n  }\n`;\n\n\n\nexport const TodoForm = ({ dark, setDark, colorOne, colorTwo }) => {\n  const savedTodos = JSON.parse(localStorage.getItem(\"todos\") || \"[]\");\n\n  // list of todos //\n  const [todos, setTodos] = useState(savedTodos ? savedTodos : []);\n\n  const [hovered, setHovered] = useState(false);\n\n  // track input value //\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const savedCompletedTodos = JSON.parse(\n    localStorage.getItem(\"completedTodos\") || \"[]\"\n  );\n\n  // list of completed todos //\n  const [completeTodos, setCompleteTodos] = useState(\n    savedCompletedTodos ? savedCompletedTodos : []\n  );\n\n  const saveToStorage = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n\n    localStorage.setItem(\"completedTodos\", JSON.stringify(completeTodos));\n  };\n\n  // handle input change //\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  // handle form submit //\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.length > 0) {\n      const randomNum = () => {\n        return Math.floor(Math.random() * Math.floor(300));\n      };\n\n      todos.push({\n        value: inputValue,\n        completed: false,\n        date: new Date(),\n        id: randomNum(),\n      });\n\n      setTodos([...todos]);\n\n      setInputValue(\"\");\n\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  };\n\n  // delete todos //\n  const deleteTodo = (todoIndex, myTodos) => {\n    console.log(todoIndex);\n\n    // get this index and remove from todos array //\n\n    const newTodos = todos.filter((todos) => todos.id !== myTodos.id);\n\n    setTodos(newTodos);\n\n    const newCompletedtodos = completeTodos.filter(\n      (todos) => todos.id !== myTodos.id\n    );\n\n    setCompleteTodos(newCompletedtodos);\n\n    console.log(completeTodos);\n\n    console.log(myTodos.value);\n\n    localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n  };\n\n  const completeTodo = (myTodos, todoIndex) => {\n    myTodos.completed = !myTodos.completed;\n\n    setTodos([...todos]);\n\n    if (myTodos.completed == true) {\n      setCompleteTodos([...completeTodos, myTodos]);\n\n      console.log(todos);\n\n      saveToStorage();\n    } else {\n      const newCompletedtodos = completeTodos.filter(\n        (todos) => todos.id !== myTodos.id\n      );\n\n      setCompleteTodos(newCompletedtodos);\n\n      saveToStorage();\n    }\n\n    console.log(completeTodos);\n  };\n\n  const todoItems = todos.map((todos, index) => {\n    return (\n      <TodoItemContainer key={index}>\n        <TodoItemCard\n          onClick={() => deleteTodo(index, todos)}\n          style={{\n            border: `1px solid ${colorTwo}`,\n            color: todos.completed ? colorOne : colorTwo,\n            background: todos.completed ? colorTwo : colorOne,\n          }}\n        >\n          {todos.value}\n\n          <DateTime>{todos.date.toString().slice(0, 24)}</DateTime>\n        </TodoItemCard>\n\n        <DeleteButton\n          onClick={() => completeTodo(todos, index)}\n          style={{\n            border: `1px solid ${colorTwo}`,\n            color: todos.completed ? colorOne : colorTwo,\n            background: todos.completed ? colorTwo : colorOne,\n          }}\n        >\n          {todos.completed ? <DoneIcon></DoneIcon> : \" \"}\n        </DeleteButton>\n      </TodoItemContainer>\n    );\n  });\n\n  return (\n    <Container>\n      <Header style={{ color: colorTwo }}>\n        <Logo>todo.</Logo>\n\n        <DarkMode\n          onClick={() => setDark(!dark)}\n          style={{ color: colorTwo, border: `1px solid ${colorTwo}` }}\n        >\n          <Switch\n            style={{\n              color: colorTwo,\n              background: colorTwo,\n              position: \"absolute\",\n              right: dark ? \"0px\" : \"25px\",\n            }}\n          ></Switch>\n        </DarkMode>\n      </Header>\n\n      <Progress\n        todos={todos}\n        completed={completeTodos}\n        colorTwo={colorTwo}\n        colorOne={colorOne}\n      ></Progress>\n\n      <AppContainer>\n        <TodoContainer>\n          {/* <SimpleSelect todos={todos} setTodos={setTodos}></SimpleSelect> */}\n\n          <InputTodoContainer onSubmit={handleSubmit}>\n            <InputTodo\n              onChange={handleChange}\n              style={{ color: colorTwo, border: `1px solid ${colorTwo}` }}\n              value={inputValue}\n              placeholder={\"add todo\"}\n            ></InputTodo>\n            <AddButton\n              style={{\n                color: hovered ? colorOne : colorTwo,\n                border: `1px solid ${colorTwo}`,\n                background: hovered ? colorTwo : colorOne,\n              }}\n              onMouseEnter={() => setHovered(!hovered)}\n              onMouseLeave={() => setHovered(!hovered)}\n              onClick={handleSubmit}\n            >\n              <AddIcon></AddIcon>\n            </AddButton>\n          </InputTodoContainer>\n\n          {todoItems}\n        </TodoContainer>\n\n        <Completed\n          setCompleteTodos={setCompleteTodos}\n          completeTodos={completeTodos}\n          todos={todos}\n          setTodos={setTodos}\n          colorOne={colorOne}\n          colorTwo={colorTwo}\n          saveToStorage={saveToStorage()}\n        ></Completed>\n      </AppContainer>\n      <Message style={{ color: colorTwo }}>\n        {todos.length == 1\n          ? \"Click on todo to delete\"\n          : todos.length == 0\n          ? \"Add todo to get started\"\n          : \"\"}\n      </Message>\n    </Container>\n  );\n};\n","import \"./App.css\";\nimport { TodoForm } from \"./comp/todoForm\";\nimport React, { useState } from \"react\";\n/* import { useState } from 'react' */\n\nfunction App() {\n  const [dark, setDark] = useState(false);\n\n  const colorOne = () => (dark ? \"blue\" : \"#ffffff\");\n  const colorTwo = () => (dark ? \"#ffffff\" : \"blue\");\n\n  return (\n    <div className=\"App\" style={{ background: colorOne() }}>\n      <TodoForm\n        dark={dark}\n        setDark={setDark}\n        colorOne={colorOne()}\n        colorTwo={colorTwo()}\n      ></TodoForm>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}